on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - '*' # Push events with a tag

name: Create dataset and create release

jobs:
  build:
    name: Create dataset and create release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        # This is the version of the action for setting up Python, not the Python version.
        uses: actions/setup-python@v5
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.12'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
      - name: Install package dependencies # This would actually build your project, using zip for an example artifact
        run: |
          pip install -r requirements.txt
      - name: Create dataset # This would actually build your project, using zip for an example artifact
        run: |
          python3 create_customer_data.py
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./fake_customer_data.csv
          asset_name: fake_customer_data.csv
          asset_content_type: text/csv
